{
  "openapi": "3.0.3",
  "info": {
    "version": "2.0.1",
    "title": "SoYummy API docs",
    "description": "API documentation for GoIT project 'Kapusta'. [Backend github repository](https://github.com/chuzhov/soyummy-back)",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [{ "url": "http://localhost:4000" }],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Users",
      "description": "Users endpoints"
    },
    {
      "name": "Recipes",
      "description": "Recipes endpoints"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "409": {
            "description": "User with email is already registered",
            "content": {}
          }
        }
      }
    }
  },
  "/auth/login": {
    "post": {
      "tags": ["Auth"],
      "summary": "User authentication",
      "parameters": [],
      "requestBody": {
        "description": "Authentication's object",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/LoginRequest"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful operation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginResponse"
              }
            }
          }
        },
        "401": {
          "description": "Email or password is invalid",
          "content": {}
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Arestovych"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "Qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Arestovych"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "   ": {
            "type": "number",
            "description": "User's id",
            "example": "64088570b21fee18f53f917f"
          }
        }
      },
      "LoginRequest": {
        "required": ["email", "password"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "Qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "Session's access token (needed for all requests)",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0MDg4NTcwYjIxZmVlMThmNTNmOTE3ZiIsImlhdCI6MTY3ODI4MjAwOCwiZXhwIjoxNjc4MjgyOTA4fQ.dl2FApjH1FLZXF-CYD4De7leFnhLUmYhV07L9HtrK78"
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "User's id",
                "example": "64088570b21fee18f53f917f"
              },
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Arestovych"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "avatarURL": {
                "type": "string",
                "description": "User's avatar",
                "example": "User's avatar"
              },
              "subscribed": {
                "type": "string",
                "description": "User's subscription",
                "example": false
              },
              "favoriteRecipes": {
                "type": "array",
                "description": "User's favorite recipes",
                "items": {
                  "type": "object",
                  "description": "User's favorite recipe",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Recipe's id",
                      "example": "64088570b21fee18f53f917f"
                    },
                    "name": {
                      "type": "string",
                      "description": "Recipe's name",
                      "example": "Recipe's name"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
